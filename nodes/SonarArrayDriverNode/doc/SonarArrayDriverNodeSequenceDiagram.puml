@startuml
title Sonar Array Driver Node Sequence Diagram
actor User as user
participant SonarArrayDriverNode as node
participant SonarArrayDriverNodeProcess as process
participant SonarArrayNodeDriver as driver
participant Logger as logger

alt initialize
    activate node
    node -> node++: start()
    node -> node: initialize_diagnostic
    node -> process++: SonarArrayDriverNodeProcess()
    node -> node: preinitialize_basenode()
    node -> process: enable_diagnostics()
    node -> process++: finish_initialization()
    process -> driver++: init()
    process --> node--
    node -> node: finish_initialization()
    node -> node: rescan_nodes()
    node -> process: request_statechange(RUNNING,override=true)
    node--
end

alt message_callback
end

alt loops
    alt loop1
        node -> node++: run_loop1
        node -> process++: update(0.02, now)
        process -> driver++: update(0.02)
        driver --> process--: diag
        process --> node--: diag
        node -> process++: get_sonar_data()
        process -> driver++: get_sonar_data()
        driver --> process--: sonar_data
        process --> node--: sonar_data
        node --> user: sonardata_pub.publish(sonar_data)
        node--
    end
    alt loop2
        node -> node++: run_loop2
        node--
    end
    alt loop3
        node -> node++: run_loop3
        node--
    end
    alt run_001hz
        node -> node++: run_001hz
        node--
    end
    alt run_01hz
        node -> node++: run_001hz
        node--
    end
    alt run_01hz_noisy
        node -> process: pretty()
        process --> node: str
        node -> logger: log_debug(str)
    end
    alt run_1hz
        node -> process: get_latest_diagnostics()
        process --> node: latest_diagnostics
        node -> user: publish(latest_diagnostics)
    end
    alt run_10hz
       

  
        alt if diag.level >= NOTICE
            node -> logger: log_diagnostic(diag)
        end
        node -> process: get_diagnostics()
        process --> node: diagnostics
        node -> node: update_diagnostics(diagnostics)
        node -> process: get_ready_to_arm()
        process --> node: ready_to_arm
        node -> node: update_ready_to_arm(ready_to_arm)

    end
end
@enduml